---
title: "Habitat_Model_VZH"
format: html
---

# Clear R environment 
```{r}
#clear R environment
rm(list = ls())
```

# Install and load packages 
```{r}
# check for a package, install and load
pkgCheck <- function(x){ 
  if (!require(x,character.only = TRUE)){
    install.packages(x,dependencies=TRUE)
    if(!require(x,character.only = TRUE)) {
      stop()
    }
  }
}

pkgCheck("raster")
pkgCheck("spsurvey")
library(terra)
library(tmap)
library(raster)
library(ggplot2)
library(tibble)
```

# Load input rasters (velocity only)
```{r}
# Read raster-files of velocities 
v_path <- "raster_files"

# read raster-files
velocity_2 <- raster(file.path(v_path, "Landquart_results_velocity_2.tif"))
velocity_3 <- raster(file.path(v_path, "Landquart_results_velocity_3.tif"))
velocity_4 <- raster(file.path(v_path, "Landquart_results_velocity_4.tif"))
velocity_7 <- raster(file.path(v_path, "Landquart_results_velocity_7.tif"))
velocity_9 <- raster(file.path(v_path, "Landquart_results_velocity_9.tif"))
velocity_11 <- raster(file.path(v_path, "Landquart_results_velocity_11.tif"))
velocity_13 <- raster(file.path(v_path, "Landquart_results_velocity_13.tif"))
velocity_15 <- raster(file.path(v_path, "Landquart_results_velocity_15.tif"))
velocity_18 <- raster(file.path(v_path, "Landquart_results_velocity_18.tif"))
velocity_22 <- raster(file.path(v_path, "Landquart_results_velocity_22.tif"))
velocity_25 <- raster(file.path(v_path, "Landquart_results_velocity_25.tif"))
velocity_28 <- raster(file.path(v_path, "Landquart_results_velocity_28.tif"))
velocity_32 <- raster(file.path(v_path, "Landquart_results_velocity_32.tif"))

# Set all 0-cells to NA 
velocity_2[velocity_2 == 0] <- NA
velocity_3[velocity_3 == 0] <- NA
velocity_4[velocity_4 == 0] <- NA
velocity_7[velocity_7 == 0] <- NA
velocity_9[velocity_9 == 0] <- NA
velocity_11[velocity_11 == 0] <- NA
velocity_13[velocity_13 == 0] <- NA
velocity_15[velocity_15 == 0] <- NA
velocity_18[velocity_18 == 0] <- NA
velocity_22[velocity_22 == 0] <- NA
velocity_25[velocity_25 == 0] <- NA
velocity_28[velocity_28 == 0] <- NA
velocity_32[velocity_32 == 0] <- NA
```

# Reclassify Rasters (VZH)
```{r}
# Define the reclassification table
# In this example, values from 0 to 0.05 are set to 1,
# values from 0.05 to 0.25 are set to 3, and so on.
# values from VZH are in cm/s, in raster in m/s (therefore values from VZH are converted into m/s with e.g., 5cm/s / 100 = 0.05m/s)
reclass_table <- c(0, 0.05, 1, 
                   0.05, 0.25, 3, 
                   0.25, 0.75, 5,
                   0.75, 1.50, 4,
                   1.50, 2.50, 5,
                   2.50, Inf, NA)

# Classify rasters (include.lowest = TRUE includes 0 m/s, which will be also classified as 1)
raster_classify_2 <- reclassify(velocity_2, reclass_table,  include.lowest = TRUE)
raster_classify_3 <- reclassify(velocity_3, reclass_table,  include.lowest = TRUE)
raster_classify_4 <- reclassify(velocity_4, reclass_table,  include.lowest = TRUE)
raster_classify_7 <- reclassify(velocity_7, reclass_table,  include.lowest = TRUE)
raster_classify_9 <- reclassify(velocity_9, reclass_table,  include.lowest = TRUE)
raster_classify_11 <- reclassify(velocity_11, reclass_table,  include.lowest = TRUE)
raster_classify_13 <- reclassify(velocity_13, reclass_table,  include.lowest = TRUE)
raster_classify_15 <- reclassify(velocity_15, reclass_table,  include.lowest = TRUE)
raster_classify_18 <- reclassify(velocity_18, reclass_table,  include.lowest = TRUE)
raster_classify_22 <- reclassify(velocity_22, reclass_table,  include.lowest = TRUE)
raster_classify_25 <- reclassify(velocity_25, reclass_table,  include.lowest = TRUE)
raster_classify_28 <- reclassify(velocity_28, reclass_table,  include.lowest = TRUE)
raster_classify_32 <- reclassify(velocity_32, reclass_table,  include.lowest = TRUE)


# write/save reclassified rasters
writeRaster(raster_classify_2, "raster_files/raster_classify_2.tif", format="GTiff", overwrite = TRUE)
writeRaster(raster_classify_3, "raster_files/raster_classify_3.tif", format="GTiff", overwrite = TRUE)
writeRaster(raster_classify_4, "raster_files/raster_classify_4.tif", format="GTiff", overwrite = TRUE)
writeRaster(raster_classify_7, "raster_files/raster_classify_7.tif", format="GTiff", overwrite = TRUE)
writeRaster(raster_classify_9, "raster_files/raster_classify_9.tif", format="GTiff", overwrite = TRUE)
writeRaster(raster_classify_11, "raster_files/raster_classify_11.tif", format="GTiff", overwrite = TRUE)
writeRaster(raster_classify_13, "raster_files/raster_classify_13.tif", format="GTiff", overwrite = TRUE)
writeRaster(raster_classify_15, "raster_files/raster_classify_15.tif", format="GTiff", overwrite = TRUE)
writeRaster(raster_classify_18, "raster_files/raster_classify_18.tif", format="GTiff", overwrite = TRUE)
writeRaster(raster_classify_22, "raster_files/raster_classify_22.tif", format="GTiff", overwrite = TRUE)
writeRaster(raster_classify_25, "raster_files/raster_classify_25.tif", format="GTiff", overwrite = TRUE)
writeRaster(raster_classify_28, "raster_files/raster_classify_28.tif", format="GTiff", overwrite = TRUE)
writeRaster(raster_classify_32, "raster_files/raster_classify_32.tif", format="GTiff", overwrite = TRUE)
```

# Habitat modelling 
## Read Suitability Curve 
```{r}
# Read suitability curve
sc_v_VZH_path <- "Suitability_Curves_Data/VZH/VZH_B5.csv" 
sc_v_VZH <- read.csv(sc_v_VZH_path, sep=";", dec=".", header = TRUE)
```

## Univariate Habitat Model (Velocity Class)
```{r}
# Read raster-files of velocities 
v_path <- "raster_files"

# read raster-files
v_2 <- raster(file.path(v_path, "raster_classify_2.tif"))
v_3 <- raster(file.path(v_path, "raster_classify_3.tif"))
v_4 <- raster(file.path(v_path, "raster_classify_4.tif"))
v_7 <- raster(file.path(v_path, "raster_classify_7.tif"))
v_9 <- raster(file.path(v_path, "raster_classify_9.tif"))
v_11 <- raster(file.path(v_path, "raster_classify_11.tif"))
v_13 <- raster(file.path(v_path, "raster_classify_13.tif"))
v_15 <- raster(file.path(v_path, "raster_classify_15.tif"))
v_18 <- raster(file.path(v_path, "raster_classify_18.tif"))
v_22 <- raster(file.path(v_path, "raster_classify_22.tif"))
v_25 <- raster(file.path(v_path, "raster_classify_25.tif"))
v_28 <- raster(file.path(v_path, "raster_classify_28.tif"))
v_32 <- raster(file.path(v_path, "raster_classify_32.tif"))

# Q2.4
VZH_2 <- calc(v_2, fun = approxfun(sc_v_VZH$Bewohnbarkeitsklasse, sc_v_VZH$HSI, rule = 2)) 

# Q3.9
VZH_3 <- calc(v_3, fun = approxfun(sc_v_VZH$Bewohnbarkeitsklasse, sc_v_VZH$HSI, rule = 2)) 

# Q4.6
VZH_4 <- calc(v_4, fun = approxfun(sc_v_VZH$Bewohnbarkeitsklasse, sc_v_VZH$HSI, rule = 2)) 

# Q7
VZH_7 <- calc(v_7, fun = approxfun(sc_v_VZH$Bewohnbarkeitsklasse, sc_v_VZH$HSI, rule = 2)) 

# Q9.24
VZH_9 <- calc(v_9, fun = approxfun(sc_v_VZH$Bewohnbarkeitsklasse, sc_v_VZH$HSI, rule = 2)) 

# Q11
VZH_11 <- calc(v_11, fun = approxfun(sc_v_VZH$Bewohnbarkeitsklasse, sc_v_VZH$HSI, rule = 2)) 

# Q13.3
VZH_13 <- calc(v_13, fun = approxfun(sc_v_VZH$Bewohnbarkeitsklasse, sc_v_VZH$HSI, rule = 2)) 

# Q15
VZH_15 <- calc(v_15, fun = approxfun(sc_v_VZH$Bewohnbarkeitsklasse, sc_v_VZH$HSI, rule = 2)) 

# Q18.9
VZH_18 <- calc(v_18, fun = approxfun(sc_v_VZH$Bewohnbarkeitsklasse, sc_v_VZH$HSI, rule = 2)) 

# Q22
VZH_22 <- calc(v_22, fun = approxfun(sc_v_VZH$Bewohnbarkeitsklasse, sc_v_VZH$HSI, rule = 2)) 

# Q25
VZH_25 <- calc(v_25, fun = approxfun(sc_v_VZH$Bewohnbarkeitsklasse, sc_v_VZH$HSI, rule = 2)) 

# Q28
VZH_28 <- calc(v_28, fun = approxfun(sc_v_VZH$Bewohnbarkeitsklasse, sc_v_VZH$HSI, rule = 2)) 

# Q32.69
VZH_32 <- calc(v_32, fun = approxfun(sc_v_VZH$Bewohnbarkeitsklasse, sc_v_VZH$HSI, rule = 2)) 
```

## Persistent Habitats
```{r}
# Clip the raster1 with raster2
persistent_2 <- mask(VZH_2, VZH_2)
persistent_3 <- mask(VZH_2, VZH_3)
persistent_4 <- mask(VZH_2, VZH_4)
persistent_7 <- mask(VZH_2, VZH_7)
persistent_9 <- mask(VZH_2, VZH_9)
persistent_11 <- mask(VZH_2, VZH_11)
persistent_13 <- mask(VZH_2, VZH_13)
persistent_15 <- mask(VZH_2, VZH_15)
persistent_18 <- mask(VZH_2, VZH_18)
persistent_22 <- mask(VZH_2, VZH_22)
persistent_25 <- mask(VZH_2, VZH_25)
persistent_28 <- mask(VZH_2, VZH_28)
persistent_32 <- mask(VZH_2, VZH_32)

# Save the clipped raster-files as a new file
writeRaster(persistent_2, filename="results_univariate/persistent_VZH_2.tif", format="GTiff", overwrite = TRUE)
writeRaster(persistent_3, filename="results_univariate/persistent_VZH_3.tif", format="GTiff", overwrite = TRUE)
writeRaster(persistent_4, filename="results_univariate/persistent_VZH_4.tif", format="GTiff", overwrite = TRUE)
writeRaster(persistent_7, filename="results_univariate/persistent_VZH_7.tif", format="GTiff", overwrite = TRUE)
writeRaster(persistent_9, filename="results_univariate/persistent_VZH_9.tif", format="GTiff", overwrite = TRUE)
writeRaster(persistent_11, filename="results_univariate/persistent_VZH_11.tif", format="GTiff", overwrite = TRUE)
writeRaster(persistent_13, filename="results_univariate/persistent_VZH_13.tif", format="GTiff", overwrite = TRUE)
writeRaster(persistent_15, filename="results_univariate/persistent_VZH_15.tif", format="GTiff", overwrite = TRUE)
writeRaster(persistent_18, filename="results_univariate/persistent_VZH_18.tif", format="GTiff", overwrite = TRUE)
writeRaster(persistent_22, filename="results_univariate/persistent_VZH_22.tif", format="GTiff", overwrite = TRUE)
writeRaster(persistent_25, filename="results_univariate/persistent_VZH_25.tif", format="GTiff", overwrite = TRUE)
writeRaster(persistent_28, filename="results_univariate/persistent_VZH_28.tif", format="GTiff", overwrite = TRUE)
writeRaster(persistent_32, filename="results_univariate/persistent_VZH_32.tif", format="GTiff", overwrite = TRUE)
```

# Calculate WUA normal 
```{r}
# Q2.4
WUA_VZH_2 <- cellStats(VZH_2, 'sum') * 4

# Q3.9
WUA_VZH_3 <- cellStats(VZH_3, 'sum') * 4

# Q4.6
WUA_VZH_4 <- cellStats(VZH_4, 'sum') * 4

# Q7
WUA_VZH_7 <- cellStats(VZH_7, 'sum') * 4

# Q9.24
WUA_VZH_9 <- cellStats(VZH_9, 'sum') * 4

# Q11
WUA_VZH_11 <- cellStats(VZH_11, 'sum') * 4

# Q13.3
WUA_VZH_13 <- cellStats(VZH_13, 'sum') * 4

# Q15
WUA_VZH_15 <- cellStats(VZH_15, 'sum') * 4

# Q18.9
WUA_VZH_18 <- cellStats(VZH_18, 'sum') * 4

# Q22
WUA_VZH_22 <- cellStats(VZH_22, 'sum') * 4

# Q25
WUA_VZH_25 <- cellStats(VZH_25, 'sum') * 4

# Q28
WUA_VZH_28 <- cellStats(VZH_28, 'sum') * 4

# Q32.69
WUA_VZH_32 <- cellStats(VZH_32, 'sum') * 4
```

# Calculate WUA with persistent habitat
```{r}
# Q2.4
WUA_pers_2 <- cellStats(persistent_2, 'sum') * 4

# Q3.9
WUA_pers_3 <- cellStats(persistent_3, 'sum') * 4

# Q4.6
WUA_pers_4 <- cellStats(persistent_4, 'sum') * 4

# Q7
WUA_pers_7 <- cellStats(persistent_7, 'sum') * 4

# Q9.24
WUA_pers_9 <- cellStats(persistent_9, 'sum') * 4

# Q11
WUA_pers_11 <- cellStats(persistent_11, 'sum') * 4

# Q13.3
WUA_pers_13 <- cellStats(persistent_13, 'sum') * 4

# Q15
WUA_pers_15 <- cellStats(persistent_15, 'sum') * 4

# Q18.9
WUA_pers_18 <- cellStats(persistent_18, 'sum') * 4

# Q22
WUA_pers_22 <- cellStats(persistent_22, 'sum') * 4

# Q25
WUA_pers_25 <- cellStats(persistent_25, 'sum') * 4

# Q28
WUA_pers_28 <- cellStats(persistent_28, 'sum') * 4

# Q32.69
WUA_pers_32 <- cellStats(persistent_32, 'sum') * 4
```

# Calculate frequency table normal
```{r}
# Q2.4
freq_VZH_2 <- as.data.frame(freq(VZH_2, digit=1, useNA= "no"))

# Q3.9
freq_VZH_3 <- as.data.frame(freq(VZH_3, digit=1, useNA= "no")) 

# Q4.6
freq_VZH_4 <- as.data.frame(freq(VZH_4, digit=1, useNA= "no")) 

# Q7
freq_VZH_7 <- as.data.frame(freq(VZH_7, digit=1, useNA= "no"))

# Q9
freq_VZH_9 <- as.data.frame(freq(VZH_9, digit=1, useNA= "no")) 

# Q11
freq_VZH_11 <- as.data.frame(freq(VZH_11, digit=1, useNA= "no")) 

# Q13.3
freq_VZH_13 <- as.data.frame(freq(VZH_13, digit=1, useNA= "no")) 

# Q15
freq_VZH_15 <- as.data.frame(freq(VZH_15, digit=1, useNA= "no")) 

# Q18.9
freq_VZH_18 <- as.data.frame(freq(VZH_18, digit=1, useNA= "no")) 

# Q22
freq_VZH_22 <- as.data.frame(freq(VZH_22, digit=1, useNA= "no")) 

# Q25
freq_VZH_25 <- as.data.frame(freq(VZH_25, digit=1, useNA= "no")) 

# Q28
freq_VZH_28 <- as.data.frame(freq(VZH_28, digit=1, useNA= "no")) 

# Q32.69
freq_VZH_32 <- as.data.frame(freq(VZH_32, digit=1, useNA= "no")) 
```

# Calculate frequency table persistent
```{r}
# Q2.4
freq_pers_2 <- as.data.frame(freq(persistent_2, digit=1, useNA= "no"))

# Q3.9
freq_pers_3 <- as.data.frame(freq(persistent_3, digit=1, useNA= "no")) 

# Q4.6
freq_pers_4 <- as.data.frame(freq(persistent_4, digit=1, useNA= "no")) 

# Q7
freq_pers_7 <- as.data.frame(freq(persistent_7, digit=1, useNA= "no")) 

# Q9
freq_pers_9 <- as.data.frame(freq(persistent_9, digit=1, useNA= "no")) 

# Q11
freq_pers_11 <- as.data.frame(freq(persistent_11, digit=1, useNA= "no")) 

# Q13.3
freq_pers_13 <- as.data.frame(freq(persistent_13, digit=1, useNA= "no")) 

# Q15
freq_pers_15 <- as.data.frame(freq(persistent_15, digit=1, useNA= "no")) 

# Q18.9
freq_pers_18 <- as.data.frame(freq(persistent_18, digit=1, useNA= "no")) 

# Q22
freq_pers_22 <- as.data.frame(freq(persistent_22, digit=1, useNA= "no")) 

# Q25
freq_pers_25 <- as.data.frame(freq(persistent_25, digit=1, useNA= "no")) 

# Q28
freq_pers_28 <- as.data.frame(freq(persistent_28, digit=1, useNA= "no")) 

# Q32.69
freq_pers_32 <- as.data.frame(freq(persistent_32, digit=1, useNA= "no")) 
```

# Calculate WA_tot normal
```{r}
# Q2.4
WA_tot_VZH_2 <- sum(freq_VZH_2$count) * 4

# Q3.9
WA_tot_VZH_3 <- sum(freq_VZH_3$count) * 4

# Q4.6
WA_tot_VZH_4 <- sum(freq_VZH_4$count) * 4

# Q7
WA_tot_VZH_7 <- sum(freq_VZH_7$count) * 4

# Q9
WA_tot_VZH_9 <- sum(freq_VZH_9$count) * 4

# Q11
WA_tot_VZH_11 <- sum(freq_VZH_11$count) * 4

# Q13.3
WA_tot_VZH_13 <- sum(freq_VZH_13$count) * 4

# Q15
WA_tot_VZH_15 <- sum(freq_VZH_15$count) * 4

# Q18.9
WA_tot_VZH_18 <- sum(freq_VZH_18$count) * 4

# Q22
WA_tot_VZH_22 <- sum(freq_VZH_22$count) * 4

# Q25
WA_tot_VZH_25 <- sum(freq_VZH_25$count) * 4

# Q28
WA_tot_VZH_28 <- sum(freq_VZH_28$count) * 4

# Q32.69
WA_tot_VZH_32 <- sum(freq_VZH_32$count) * 4
```

# Calculate WA_tot persistent
```{r}
# Q2.4
WA_tot_pers_2 <- sum(freq_pers_2$count) * 4

# Q3.9
WA_tot_pers_3 <- sum(freq_pers_3$count) * 4

# Q4.6
WA_tot_pers_4 <- sum(freq_pers_4$count) * 4

# Q7
WA_tot_pers_7 <- sum(freq_pers_7$count) * 4

# Q9
WA_tot_pers_9 <- sum(freq_pers_9$count) * 4

# Q11
WA_tot_pers_11 <- sum(freq_pers_11$count) * 4

# Q13.3
WA_tot_pers_13 <- sum(freq_pers_13$count) * 4

# Q15
WA_tot_pers_15 <- sum(freq_pers_15$count) * 4

# Q18.9
WA_tot_pers_18 <- sum(freq_pers_18$count) * 4

# Q22
WA_tot_pers_22 <- sum(freq_pers_22$count) * 4

# Q25
WA_tot_pers_25 <- sum(freq_pers_25$count) * 4

# Q28
WA_tot_pers_28 <- sum(freq_pers_28$count) * 4

# Q32.69
WA_tot_pers_32 <- sum(freq_pers_32$count) * 4
```

# Calculate HHS [-] normal
```{r}
# Q2.4
HHS_VZH_2 <- WUA_VZH_2/WA_tot_VZH_2

# Q3.9
HHS_VZH_3 <- WUA_VZH_3/WA_tot_VZH_3

# Q4.6
HHS_VZH_4 <- WUA_VZH_4/WA_tot_VZH_4

# Q7
HHS_VZH_7 <- WUA_VZH_7/WA_tot_VZH_7

# Q9
HHS_VZH_9 <- WUA_VZH_9/WA_tot_VZH_9

# Q11
HHS_VZH_11 <- WUA_VZH_11/WA_tot_VZH_11

# Q13.3
HHS_VZH_13 <- WUA_VZH_13/WA_tot_VZH_13

# Q15
HHS_VZH_15 <- WUA_VZH_15/WA_tot_VZH_15

# Q18.9
HHS_VZH_18 <- WUA_VZH_18/WA_tot_VZH_18

# Q22
HHS_VZH_22 <- WUA_VZH_22/WA_tot_VZH_22

# Q25
HHS_VZH_25 <- WUA_VZH_25/WA_tot_VZH_25

# Q28
HHS_VZH_28 <- WUA_VZH_28/WA_tot_VZH_28

# Q32.69
HHS_VZH_32 <- WUA_VZH_32/WA_tot_VZH_32
```

# Calculate HHS [-] persistent
```{r}
# Q2.4
HHS_pers_2 <- WUA_pers_2/WA_tot_pers_2

# Q3.9
HHS_pers_3 <- WUA_pers_3/WA_tot_pers_3

# Q4.6
HHS_pers_4 <- WUA_pers_4/WA_tot_pers_4

# Q7
HHS_pers_7 <- WUA_pers_7/WA_tot_pers_7

# Q9
HHS_pers_9 <- WUA_pers_9/WA_tot_pers_9

# Q11
HHS_pers_11 <- WUA_pers_11/WA_tot_pers_11

# Q13.3
HHS_pers_13 <- WUA_pers_13/WA_tot_pers_13

# Q15
HHS_pers_15 <- WUA_pers_15/WA_tot_pers_15

# Q18.9
HHS_pers_18 <- WUA_pers_18/WA_tot_pers_18

# Q22
HHS_pers_22 <- WUA_pers_22/WA_tot_pers_22

# Q25
HHS_pers_25 <- WUA_pers_25/WA_tot_pers_25

# Q28
HHS_pers_28 <- WUA_pers_28/WA_tot_pers_28

# Q32.69
HHS_pers_32 <- WUA_pers_32/WA_tot_pers_32
```

# dataframe and .csv of calculated indices 
```{r}
# data frame WUA and HHS 
results_VZH <- data.frame(Description = c("VZH", "VZH", "VZH", "VZH", "VZH", "VZH", "VZH", "VZH", "VZH", "VZH", "VZH", "VZH", "VZH"), Discharge = c(2.4, 3.9, 4.6, 7, 9, 11.4, 13.3, 15, 18.9, 22, 25, 28, 32.69), 
                      WUA_normal = c(WUA_VZH_2, WUA_VZH_3, WUA_VZH_4, WUA_VZH_7, WUA_VZH_9, WUA_VZH_11, WUA_VZH_13, WUA_VZH_15, WUA_VZH_18, WUA_VZH_22, WUA_VZH_25, WUA_VZH_28, WUA_VZH_32), 
                      WUA_pers = c(WUA_pers_2, WUA_pers_3, WUA_pers_4, WUA_pers_7, WUA_pers_9,  WUA_pers_11, WUA_pers_13, WUA_pers_15, WUA_pers_18, WUA_pers_22, WUA_pers_25, WUA_pers_28, WUA_pers_32),
                      HHS_normal = c(HHS_VZH_2, HHS_VZH_3, HHS_VZH_4, HHS_VZH_7, HHS_VZH_9, HHS_VZH_11, HHS_VZH_13, HHS_VZH_15, HHS_VZH_18, HHS_VZH_22, HHS_VZH_25, HHS_VZH_28, HHS_VZH_32),
                      HHS_pers = c(HHS_pers_2, HHS_pers_3, HHS_pers_4, HHS_pers_7, HHS_pers_9, HHS_pers_11, HHS_pers_13, HHS_pers_15, HHS_pers_18, HHS_pers_22, HHS_pers_25, HHS_pers_28, HHS_pers_32),
                      WA_tot_normal = c(WA_tot_VZH_2, WA_tot_VZH_3, WA_tot_VZH_4, WA_tot_VZH_7, WA_tot_VZH_9, WA_tot_VZH_11, WA_tot_VZH_13, WA_tot_VZH_15, WA_tot_VZH_18, WA_tot_VZH_22, WA_tot_VZH_25, WA_tot_VZH_28, WA_tot_VZH_32),
                      WA_tot_pers = c(WA_tot_pers_2, WA_tot_pers_3, WA_tot_pers_4, WA_tot_pers_7, WA_tot_pers_9, WA_tot_pers_11, WA_tot_pers_13, WA_tot_pers_15, WA_tot_pers_18, WA_tot_pers_22, WA_tot_pers_25, WA_tot_pers_28, WA_tot_pers_32))

write.csv(results_VZH, file = "results_statistics/Results_VZH_Habitat_Model.csv", row.names = FALSE)
```

# Comparing WUA, HHS, WA_tot with different Q
```{r}
# make data frame for plotting
library(readr)
library(ggplot2)
WUA_HHS <- read_delim("results_statistics/Results_VZH_Habitat_Model.csv")

# plot results
# WUA normal results
WUA_normal_results <- ggplot() +
  geom_line(data = WUA_HHS, aes(Discharge, WUA_normal, color = "WUA_HHS_VZH")) +
  geom_point(data = WUA_HHS, aes(Discharge, WUA_normal, color = "WUA_HHS_VZH")) +
   scale_color_manual(name = "Macroinvertebrates",
                     values = c("WUA_HHS_VZH" = "violet")) +
  labs(title = "WUA of VZH", x = expression(paste("Discharge [", m^3/s, "]")), y = "Weighted usable area (WUA)") +
  theme(legend.position = "none") +
  theme_minimal()

# WUA persistent results
WUA_pers_results <- ggplot() +
  geom_line(data = WUA_HHS, aes(Discharge, WUA_pers, color = "WUA_HHS_VZH")) +
  geom_point(data = WUA_HHS, aes(Discharge, WUA_pers, color = "WUA_HHS_VZH")) +
   scale_color_manual(name = "Macroinvertebrates",
                     values = c("WUA_HHS_VZH" = "violet")) +
  labs(title = "WUA of VZH", x = expression(paste("Discharge [", m^3/s, "]")), y = "Weighted usable area (WUA)") +
  theme(legend.position = "none") +
  theme_minimal()

# HHS normal results
HSS_results <- ggplot() +
  geom_line(data = WUA_HHS, aes(Discharge, HHS_normal, color = "WUA_HHS_VZH")) +
  geom_point(data = WUA_HHS, aes(Discharge, HHS_normal, color = "WUA_HHS_VZH")) +
   scale_color_manual(name = "Macroinvertebrates",
                     values = c("WUA_HHS_VZH" = "violet")) +
  labs(title = "HHS of VZH", x = expression(paste("Discharge [", m^3/s, "]")), y = "Hydraulic Habitat Suitability (HHS)") +
  theme(legend.position = "none") +
  theme_minimal()

# WA tot normal results
WA_tot_results <- ggplot() +
  geom_line(data = WUA_HHS, aes(Discharge, WA_tot_normal), col = "blue") +
  geom_point(data = WUA_HHS, aes(Discharge, WA_tot_normal), col = "blue") +
  labs(title = "Comparing total wetted area at different discharges", x = expression(paste("Discharge [", m^3/s, "]")), y = "Wetted Area (WA_tot)") +
  theme(legend.position = "none") +
  theme_minimal()
```

```{r}
# save plots into .png
# set the dimensions of the quadrat
quadrat_width <- 15 # in cm
quadrat_height <- 10 # in cm

# WUA normal
ggsave(filename = "results_statistics/WUA_VZH_normal_results.png",plot = WUA_normal_results, width = quadrat_width, height = quadrat_height, units = "cm")

# WUA persistent
ggsave(filename = "results_statistics/WUA_VZH_pers_results.png",plot = WUA_pers_results, width = quadrat_width, height = quadrat_height, units = "cm")

# HHS
ggsave(filename = "results_statistics/HHS_VZH_results.png",plot = HHS_results, width = quadrat_width, height = quadrat_height, units = "cm")

# WA_tot
ggsave(filename = "results_statistics/WA_tot_VZH_results.png",plot = WA_tot_results, width = quadrat_width, height = quadrat_height, units = "cm")
```




